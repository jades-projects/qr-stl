on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release Builds

jobs:
  build:
    name: Release Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          # technically we are wasting 15MB of download here but I don't know how
          # to put it in a conditional
          target: x86_64-unknown-linux-musl
          override: true
      - uses: actions-rs/cargo@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          command: build
          args: --release --target=x86_64-unknown-linux-musl
      - uses: actions-rs/cargo@v1
        if: matrix.os == 'windows-latest'
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: win64
          path: ./target/release/qr2stl.exe
      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: linux64
          path: ./target/x86_64-unknown-linux-musl/release/qr2stl

  upload:
    name: Upload assets to release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux executable
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux64/qr2stl
          asset_name: qr2stl-linux
          asset_content_type: application/x-pie-executable
      - name: Upload Windows exe
        id: upload-release-asset-win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./win64/qr2stl.exe
          asset_name: qr2stl-win64.exe
          asset_content_type: application/x-dosexec